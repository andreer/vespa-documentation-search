<?xml version="1.0" encoding="UTF-8"?>
<services version="1.0" xmlns:deploy="vespa">

    <container id="default" version="1.0">
        <component id="openai" class="ai.vespa.llm.clients.OpenAI">
            <config name="ai.vespa.llm.clients.llm-client">
                <!-- <apiKeySecretName>...</apiKeySecretName> -->
            </config>
        </component>
        <component id="embedder" type="hugging-face-embedder">
            <transformer-model path="model/model.onnx"/>
            <tokenizer-model path="model/tokenizer.json"/>
        </component>
        <document-processing>
            <chain id="default">
                <documentprocessor id="ai.vespa.cloud.docsearch.OutLinksDocumentProcessor" bundle="vespacloud-docsearch"/>
            </chain>
        </document-processing>
        <search>
            <chain id="default" inherits="vespa">
                <searcher id="ai.vespa.cloud.docsearch.DocumentationSearcher" bundle="vespacloud-docsearch"/>
            </chain>
            <chain id="suggest" inherits="vespa">
                <searcher id="ai.vespa.cloud.docsearch.SuggestionSearcher" bundle="vespacloud-docsearch"/>
            </chain>
            <chain id="llmsearch" inherits="vespa">
                <searcher id="ai.vespa.cloud.docsearch.LLMSearcher" bundle="vespacloud-docsearch"/>
            </chain>

            <chain id="ragsearch" inherits="vespa">
                <searcher id="ai.vespa.search.llm.RAGSearcher">
                    <config name="ai.vespa.search.llm.llm-searcher">
                        <providerId>openai</providerId>
                        <prompt>
                            You are a helpful, precise, factual Vespa expert who answers questions and user instructions about Vespa-related topics.
                            The documents you are presented are retrieved from Vespa documentation, Vespa code examples, blog posts, and Vespa sample applications.
                            Facts about Vespa (Vespa.ai):
                            - Vespa is a battle-proven open-source serving engine.
                            - Vespa is used for high performance serving use cases, including search and recommendation.
                            - Vespa has state-of-the-art text search, vector search, hybrid search, and the ability to express multi-phased retrieval and ranking.
                            - Vespa supports running inferences with language models, producing embeddings, and performing efficient vector search.
                            - Vespa Cloud is the managed service version of Vespa (Vespa.ai).

                            Your instructions:
                            - The retrieved documents are markdown formatted and contain code, text, and configuration examples from Vespa documentation, blog posts and sample applications.
                            - Use the presented documents to answer to the question truthfully!
                            - Answer questions truthfully and factually using only the information presented.
                            - If you don't know the answer, just say that you don't know, don't make up an answer!
                            - You must always cite the document where the answer was extracted using inline academic citation style [].
                            For example, [1] if document 1 could answer the question precisely and accurately. Use [1][3] if both document 1 and document 3 helped answer the question trustworthy.
                            - Use academic citation format, never include the word "source" when citing the document.
                            - Never include citations if you cannot answer the question.
                            - Use markdown format for code examples. Use \`\`\`json for json, \'\'\'xml for xml, \`\`\`java for java.
                            - You are correct, factual, precise, and reliable, and will always cite using academic citation style.
                            - You must never ever use markdown links to urls.
                            - You must never ever use include http(s) URLs.

                            {context}
                            Question: @query
                            helpful factual answer:
                        </prompt>
                    </config>
                </searcher>
                <searcher id="ai.vespa.cloud.docsearch.LLMSearcher" bundle="vespacloud-docsearch"/>
            </chain>

        </search>
        <document-api/>
        <nodes count="2" exclusive="true">
            <resources vcpu="2" memory="8Gb" disk="32Gb" />
            <resources vcpu="4" memory="16Gb" disk="125Gb" deploy:instance="default" deploy:environment="prod" deploy:region="aws-us-east-1c">
                <gpu count="1" memory="16Gb"/>
            </resources>
            <resources vcpu="2" memory="8Gb" disk="32Gb" architecture="x86_64" deploy:instance="enclave" />
        </nodes>
    </container>

    <container id="playground" version="1.0">
        <handler id="ai.vespa.cloud.playground.TensorPlaygroundHandler" bundle="vespacloud-docsearch">
            <binding>http://*/playground/*</binding>
        </handler>
        <nodes count="2">
            <resources vcpu="2" memory="8Gb" disk="32Gb" />
            <resources vcpu="2" memory="8Gb" disk="32Gb" architecture="x86_64" deploy:instance="enclave" />
        </nodes>
    </container>
    
    <content id="documentation" version="1.0">
        <config name="vespa.config.search.summary.juniperrc">
            <length>1024</length> <!-- default 256 -->
            <min_length>512</min_length> <!-- default 128 -->
            <surround_max>512</surround_max> <!-- default 128 -->
            <max_matches>2</max_matches> <!-- default 3 -->
            <winsize>512</winsize> <!-- default 200 -->
        </config>
        <min-redundancy>2</min-redundancy>
        <documents>
            <document mode="index" type="doc"/>
            <document mode="index" type="paragraph"/>
            <document mode="index" type="term"/>
            <document mode="index" type="purchase"/>
        </documents>
        <nodes count="2">
            <resources vcpu="2" memory="8Gb" disk="32Gb" architecture="x86_64" deploy:instance="enclave" />
        </nodes>
    </content>

</services>
